/**
 * Grid System CSS
 * Professional grid system for perfect alignment
 * Based on 8px vertical rhythm and 12-column layout
 */

/* Root Grid Variables */
:root {
  --grid-columns: 12;
  --grid-gutter: 16px;
  --grid-baseline: 8px;
  --grid-row-height: 64px;
  
  /* Spacing variables based on 8px grid */
  --space-xxs: 4px;
  --space-xs: 8px;
  --space-sm: 12px;
  --space-md: 16px;
  --space-lg: 20px;
  --space-xl: 24px;
  --space-2xl: 32px;
  --space-3xl: 40px;
  --space-4xl: 48px;
  --space-5xl: 64px;
  
  /* Component heights for consistent alignment */
  --height-button: 40px;
  --height-input: 40px;
  --height-list-item: 64px;
  --height-card-min: 64px;
  --height-nav: 64px;
}

/* Grid Container */
.grid-container {
  display: grid;
  grid-template-columns: repeat(var(--grid-columns), 1fr);
  gap: var(--grid-gutter);
  width: 100%;
  max-width: 100%;
}

/* Flexbox Grid for simpler layouts */
.flex-grid {
  display: flex;
  gap: var(--grid-gutter);
  align-items: center;
}

/* Vertical Rhythm - ensures all elements align to 8px baseline */
.vertical-rhythm > * {
  margin-bottom: 0;
  padding-top: var(--space-xs);
  padding-bottom: var(--space-xs);
  line-height: calc(var(--grid-baseline) * 3); /* 24px line height */
}

/* List Item Grid - Perfect alignment for transaction lists */
.list-item-grid {
  display: grid;
  grid-template-columns: minmax(0, auto) minmax(0, auto) 1fr auto auto;
  gap: var(--space-sm);
  align-items: center;
  min-height: var(--height-list-item);
  padding: var(--space-md);
}

.list-item-grid__checkbox {
  display: flex;
  align-items: center;
  justify-content: center;
  width: var(--space-xl);
  height: var(--space-xl);
}

.list-item-grid__content {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: var(--space-xxs);
  min-height: var(--space-4xl);
}

.list-item-grid__amount {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  font-variant-numeric: tabular-nums;
}

.list-item-grid__actions {
  display: flex;
  align-items: center;
  gap: var(--space-xs);
  opacity: 0;
  transition: opacity 0.2s ease;
}

/* Show actions on hover of the parent list item */
.list-item-grid:hover .list-item-grid__actions,
.list-item-grid:focus-within .list-item-grid__actions {
  opacity: 1;
}

/* Always show actions on touch devices when item is selected */
@media (hover: none) {
  .list-item-grid.selected .list-item-grid__actions {
    opacity: 1;
  }
}

/* Card Grid - Consistent card layouts */
.card-grid {
  display: grid;
  gap: var(--space-md);
  padding: var(--space-lg);
  align-items: start;
}

/* Alignment utilities */
.align-baseline {
  align-items: baseline;
}

.align-center {
  align-items: center;
}

.align-start {
  align-items: flex-start;
}

.align-end {
  align-items: flex-end;
}

.align-stretch {
  align-items: stretch;
}

/* Spacing utilities based on 8px grid */
.p-xxs { padding: var(--space-xxs); }
.p-xs { padding: var(--space-xs); }
.p-sm { padding: var(--space-sm); }
.p-md { padding: var(--space-md); }
.p-lg { padding: var(--space-lg); }
.p-xl { padding: var(--space-xl); }
.p-2xl { padding: var(--space-2xl); }

.px-xxs { padding-left: var(--space-xxs); padding-right: var(--space-xxs); }
.px-xs { padding-left: var(--space-xs); padding-right: var(--space-xs); }
.px-sm { padding-left: var(--space-sm); padding-right: var(--space-sm); }
.px-md { padding-left: var(--space-md); padding-right: var(--space-md); }
.px-lg { padding-left: var(--space-lg); padding-right: var(--space-lg); }
.px-xl { padding-left: var(--space-xl); padding-right: var(--space-xl); }

.py-xxs { padding-top: var(--space-xxs); padding-bottom: var(--space-xxs); }
.py-xs { padding-top: var(--space-xs); padding-bottom: var(--space-xs); }
.py-sm { padding-top: var(--space-sm); padding-bottom: var(--space-sm); }
.py-md { padding-top: var(--space-md); padding-bottom: var(--space-md); }
.py-lg { padding-top: var(--space-lg); padding-bottom: var(--space-lg); }
.py-xl { padding-top: var(--space-xl); padding-bottom: var(--space-xl); }

/* Gap utilities */
.gap-xxs { gap: var(--space-xxs); }
.gap-xs { gap: var(--space-xs); }
.gap-sm { gap: var(--space-sm); }
.gap-md { gap: var(--space-md); }
.gap-lg { gap: var(--space-lg); }
.gap-xl { gap: var(--space-xl); }
.gap-2xl { gap: var(--space-2xl); }

/* Height utilities for consistent components */
.h-button { height: var(--height-button); }
.h-input { height: var(--height-input); }
.h-list-item { height: var(--height-list-item); }
.h-card { min-height: var(--height-card-min); }

/* Typography alignment for vertical rhythm */
.text-baseline {
  line-height: calc(var(--grid-baseline) * 3);
  padding-top: calc((var(--height-list-item) - calc(var(--grid-baseline) * 3)) / 2);
  padding-bottom: calc((var(--height-list-item) - calc(var(--grid-baseline) * 3)) / 2);
}

/* Icon alignment helper */
.icon-text-align {
  display: inline-flex;
  align-items: center;
  gap: var(--space-xs);
  vertical-align: middle;
}

.icon-text-align > svg,
.icon-text-align > .icon {
  flex-shrink: 0;
  width: 1.25em;
  height: 1.25em;
}

/* Touch target minimum size (44px) */
.touch-target {
  position: relative;
  min-width: 44px;
  min-height: 44px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
}

.touch-target::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: max(100%, 44px);
  height: max(100%, 44px);
}

/* Responsive grid columns */
@media (min-width: 640px) {
  .sm\:grid-cols-1 { grid-template-columns: repeat(1, 1fr); }
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, 1fr); }
  .sm\:grid-cols-3 { grid-template-columns: repeat(3, 1fr); }
  .sm\:grid-cols-4 { grid-template-columns: repeat(4, 1fr); }
}

@media (min-width: 768px) {
  .md\:grid-cols-1 { grid-template-columns: repeat(1, 1fr); }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, 1fr); }
  .md\:grid-cols-3 { grid-template-columns: repeat(3, 1fr); }
  .md\:grid-cols-4 { grid-template-columns: repeat(4, 1fr); }
  .md\:grid-cols-6 { grid-template-columns: repeat(6, 1fr); }
}

@media (min-width: 1024px) {
  .lg\:grid-cols-1 { grid-template-columns: repeat(1, 1fr); }
  .lg\:grid-cols-2 { grid-template-columns: repeat(2, 1fr); }
  .lg\:grid-cols-3 { grid-template-columns: repeat(3, 1fr); }
  .lg\:grid-cols-4 { grid-template-columns: repeat(4, 1fr); }
  .lg\:grid-cols-6 { grid-template-columns: repeat(6, 1fr); }
  .lg\:grid-cols-12 { grid-template-columns: repeat(12, 1fr); }
}

/* Debug grid overlay (development only) */
.debug-grid {
  position: relative;
}

.debug-grid::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: 
    repeating-linear-gradient(
      0deg,
      rgba(255, 0, 0, 0.1),
      rgba(255, 0, 0, 0.1) 1px,
      transparent 1px,
      transparent var(--grid-baseline)
    ),
    repeating-linear-gradient(
      90deg,
      rgba(0, 0, 255, 0.1),
      rgba(0, 0, 255, 0.1) 1px,
      transparent 1px,
      transparent var(--grid-gutter)
    );
  pointer-events: none;
  z-index: 9999;
}